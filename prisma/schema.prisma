datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int       @id @default(autoincrement())
  name           String?
  email          String?   @unique
  hashedPassword String?
  image          String?
  emailVerified  Boolean?  @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Account        Account[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model JobApplication {
  id                Int               @id @default(autoincrement())
  jobTitle          String
  companyName       String
  applicationStatus ApplicationStatus
  jobType           JobType
  location          String
  comments          String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model SalaryEstimateDataset {
  id              Int      @id @default(autoincrement())
  jobTitle        String
  salary_estimate String
  location        String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum ApplicationStatus {
  PENDING
  REJECTED
  INTERVIEW
  OFFER
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  VOLUNTEER
  INTERNSHIP
}
